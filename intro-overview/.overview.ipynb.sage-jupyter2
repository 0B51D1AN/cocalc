{"backend_state":"ready","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"last_ipynb_save":1725374280764,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"575790","input":"","pos":14,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"cc3fe3","input":"","pos":19,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"de1a0e","input":"","pos":21,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"4edb7c","input":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","pos":4,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"4ebffc","input":"df.head()\n","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sepal length (cm)</th>\n      <th>sepal width (cm)</th>\n      <th>petal length (cm)</th>\n      <th>petal width (cm)</th>\n      <th>species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5.1</td>\n      <td>3.5</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4.9</td>\n      <td>3.0</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4.7</td>\n      <td>3.2</td>\n      <td>1.3</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4.6</td>\n      <td>3.1</td>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5.0</td>\n      <td>3.6</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   sepal length (cm)  sepal width (cm)  petal length (cm)  petal width (cm)  \\\n0                5.1               3.5                1.4               0.2   \n1                4.9               3.0                1.4               0.2   \n2                4.7               3.2                1.3               0.2   \n3                4.6               3.1                1.5               0.2   \n4                5.0               3.6                1.4               0.2   \n\n  species  \n0  setosa  \n1  setosa  \n2  setosa  \n3  setosa  \n4  setosa  "},"exec_count":11,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"7dbcaf","input":"df.columns","output":{"0":{"data":{"text/plain":"Index(['sepal length (cm)', 'sepal width (cm)', 'petal length (cm)',\n       'petal width (cm)', 'species'],\n      dtype='object')"},"exec_count":12,"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"6ecb3d","input":"# Basic data information\ndf.describe()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sepal length (cm)</th>\n      <th>sepal width (cm)</th>\n      <th>petal length (cm)</th>\n      <th>petal width (cm)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>150.000000</td>\n      <td>150.000000</td>\n      <td>150.000000</td>\n      <td>150.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>5.843333</td>\n      <td>3.057333</td>\n      <td>3.758000</td>\n      <td>1.199333</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>0.828066</td>\n      <td>0.435866</td>\n      <td>1.765298</td>\n      <td>0.762238</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>4.300000</td>\n      <td>2.000000</td>\n      <td>1.000000</td>\n      <td>0.100000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>5.100000</td>\n      <td>2.800000</td>\n      <td>1.600000</td>\n      <td>0.300000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>5.800000</td>\n      <td>3.000000</td>\n      <td>4.350000</td>\n      <td>1.300000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>6.400000</td>\n      <td>3.300000</td>\n      <td>5.100000</td>\n      <td>1.800000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>7.900000</td>\n      <td>4.400000</td>\n      <td>6.900000</td>\n      <td>2.500000</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"       sepal length (cm)  sepal width (cm)  petal length (cm)  \\\ncount         150.000000        150.000000         150.000000   \nmean            5.843333          3.057333           3.758000   \nstd             0.828066          0.435866           1.765298   \nmin             4.300000          2.000000           1.000000   \n25%             5.100000          2.800000           1.600000   \n50%             5.800000          3.000000           4.350000   \n75%             6.400000          3.300000           5.100000   \nmax             7.900000          4.400000           6.900000   \n\n       petal width (cm)  \ncount        150.000000  \nmean           1.199333  \nstd            0.762238  \nmin            0.100000  \n25%            0.300000  \n50%            1.300000  \n75%            1.800000  \nmax            2.500000  "},"exec_count":13,"output_type":"execute_result"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"3fd106","input":"# Check for missing values\ndf.isnull().sum()","output":{"0":{"data":{"text/plain":"sepal length (cm)    0\nsepal width (cm)     0\npetal length (cm)    0\npetal width (cm)     0\nspecies              0\ndtype: int64"},"exec_count":14,"output_type":"execute_result"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":15,"id":"95ecee","input":"# Box plot\nplt.figure(figsize=(12, 6))\ndf.boxplot(column=iris.feature_names, by='species')\nplt.title('Box Plot of Iris Features by Species')\nplt.suptitle('')\nplt.show()","output":{"0":{"data":{"text/plain":"<Figure size 864x432 with 0 Axes>"},"exec_count":15,"output_type":"execute_result"},"1":{"data":{"image/png":"e58b594e93fd08fbc440b8e1c5ad711d90755ef8","text/plain":"<Figure size 864x504 with 4 Axes>"},"exec_count":15,"metadata":{"image/png":{"height":437,"width":719},"needs_background":"light"},"output_type":"execute_result"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"9c96d4","input":"# Box plot\nplt.figure(figsize=(12, 6))\nsns.boxplot(x='species', y='sepal length (cm)', data=df)\nplt.title('Box Plot of Sepal Length by Species')\nplt.show()","output":{"0":{"data":{"image/png":"87302546e4c85a483b1d4b5412d7edbf485e5027","text/plain":"<Figure size 864x432 with 1 Axes>"},"exec_count":16,"metadata":{"image/png":{"height":386,"width":720},"needs_background":"light"},"output_type":"execute_result"}},"pos":11,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"a5a506","input":"# Read in the dataframe sample.csv\ndf = pd.read_csv('sample.csv')","pos":16,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"b40ff1","input":"df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Name</th>\n      <th>Year</th>\n      <th>Score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>20289.0</td>\n      <td>2023.0</td>\n      <td>5040.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>44836.0</td>\n      <td>2023.0</td>\n      <td>6480.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>49081.0</td>\n      <td>2023.0</td>\n      <td>4320.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>96169.0</td>\n      <td>2023.0</td>\n      <td>8640.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>64289.0</td>\n      <td>2023.0</td>\n      <td>6480.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"      Name    Year   Score\n0  20289.0  2023.0  5040.0\n1  44836.0  2023.0  6480.0\n2  49081.0  2023.0  4320.0\n3  96169.0  2023.0  8640.0\n4  64289.0  2023.0  6480.0"},"exec_count":18,"output_type":"execute_result"}},"pos":17,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"388de9","input":"# Load sample data (iris dataset)\nfrom sklearn.datasets import load_iris\niris = load_iris()\ndf = pd.DataFrame(iris.data, columns=iris.feature_names)\ndf['species'] = pd.Categorical.from_codes(iris.target, iris.target_names)","pos":5,"type":"cell"}
{"cell_type":"code","exec_count":20,"id":"146371","input":"df.groupby(df['Year']).describe()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead tr th {\n        text-align: left;\n    }\n\n    .dataframe thead tr:last-of-type th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th></th>\n      <th colspan=\"8\" halign=\"left\">Name</th>\n      <th colspan=\"8\" halign=\"left\">Score</th>\n    </tr>\n    <tr>\n      <th></th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n    </tr>\n    <tr>\n      <th>Year</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2023.0</th>\n      <td>426.0</td>\n      <td>47698.751174</td>\n      <td>28850.576089</td>\n      <td>4.0</td>\n      <td>22604.00</td>\n      <td>47521.0</td>\n      <td>74887.00</td>\n      <td>99824.0</td>\n      <td>426.0</td>\n      <td>6655.774648</td>\n      <td>2672.311181</td>\n      <td>0.0</td>\n      <td>5040.0</td>\n      <td>6480.0</td>\n      <td>7920.0</td>\n      <td>16560.0</td>\n    </tr>\n    <tr>\n      <th>2024.0</th>\n      <td>196.0</td>\n      <td>53103.362245</td>\n      <td>29054.185618</td>\n      <td>25.0</td>\n      <td>23377.75</td>\n      <td>59346.0</td>\n      <td>76965.25</td>\n      <td>99744.0</td>\n      <td>196.0</td>\n      <td>6141.224490</td>\n      <td>2485.725098</td>\n      <td>1440.0</td>\n      <td>4320.0</td>\n      <td>5760.0</td>\n      <td>7200.0</td>\n      <td>20000.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"         Name                                                                 \\\n        count          mean           std   min       25%      50%       75%   \nYear                                                                           \n2023.0  426.0  47698.751174  28850.576089   4.0  22604.00  47521.0  74887.00   \n2024.0  196.0  53103.362245  29054.185618  25.0  23377.75  59346.0  76965.25   \n\n                 Score                                                    \\\n            max  count         mean          std     min     25%     50%   \nYear                                                                       \n2023.0  99824.0  426.0  6655.774648  2672.311181     0.0  5040.0  6480.0   \n2024.0  99744.0  196.0  6141.224490  2485.725098  1440.0  4320.0  5760.0   \n\n                         \n           75%      max  \nYear                     \n2023.0  7920.0  16560.0  \n2024.0  7200.0  20000.0  "},"exec_count":20,"output_type":"execute_result"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":22,"id":"4c381f","input":"import matplotlib.pyplot as plt\n\ndf.boxplot(column='Score', by='Year')\nplt.show()","output":{"0":{"data":{"image/png":"c7426615dbcb5442e7df833b6d7bf79d3495500a","text/plain":"<Figure size 864x504 with 1 Axes>"},"exec_count":22,"metadata":{"image/png":{"height":462,"width":744},"needs_background":"light"},"output_type":"execute_result"}},"pos":20,"type":"cell"}
{"cell_type":"markdown","id":"15c281","input":"Sample reading in sample.csv and analyzing the basic data.","pos":13,"type":"cell"}
{"cell_type":"markdown","id":"1a9a28","input":"# Overview approaching course\n\n","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"38a3a7","input":"### Example\n","pos":3,"type":"cell"}
{"cell_type":"markdown","id":"532212","input":"Here is the new cell to be inserted after the provided context:","pos":15,"type":"cell"}
{"cell_type":"markdown","id":"8033e2","input":"### Practice Code","pos":12,"type":"cell"}
{"cell_type":"markdown","id":"be1e6c","input":"## Exploratory Data Analysis\n\n- Import the data files and clean them.\n- Basic statistics are needed for graphing and for finding any data that might be wrong.\n- Look for which parts of the data should be kept and which should be dropped.","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"f127e7","input":"```mermaid\ngraph TD\n    A[Data Science Workflow] --> B[Exploratory Data Analysis]\n    B --> C[Supervised Learning]\n    B --> D[Unsupervised Learning]\n    \n    C --> E[Regression]\n    C --> F[Classification]\n    \n    D --> G[Clustering]\n    D --> H[Dimensionality Reduction]\n\n\n```\n","pos":1,"type":"cell"}
{"id":0,"time":1725374245083,"type":"user"}
{"last_load":1725374245419,"type":"file"}